[{"C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\index.js":"1","C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\App.js":"2","C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\searchBar.js":"3","C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\recipe.js":"4","C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\recipePopup.js":"5","C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\error.js":"6","C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\account.js":"7","C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\config\\firebase.js":"8","C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\signup.js":"9","C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\login.js":"10"},{"size":161,"mtime":1607546832474,"results":"11","hashOfConfig":"12"},{"size":5487,"mtime":1608258056068,"results":"13","hashOfConfig":"12"},{"size":647,"mtime":1607546832469,"results":"14","hashOfConfig":"12"},{"size":2118,"mtime":1608258056069,"results":"15","hashOfConfig":"12"},{"size":1019,"mtime":1608167425476,"results":"16","hashOfConfig":"12"},{"size":422,"mtime":1607546832468,"results":"17","hashOfConfig":"12"},{"size":7718,"mtime":1607546832467,"results":"18","hashOfConfig":"12"},{"size":578,"mtime":1608166591978,"results":"19","hashOfConfig":"12"},{"size":1283,"mtime":1607546832469,"results":"20","hashOfConfig":"12"},{"size":1030,"mtime":1607546832468,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1no007o",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\index.js",[],["45","46"],"C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\App.js",[],"C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\searchBar.js",[],"C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\recipe.js",["47","48"],"import React from \"react\";\r\nimport styles from \"../css/mystyles.module.css\";\r\nimport heart from \"../image/heart2.png\";\r\nimport filledHeart from \"../image/heart3.png\";\r\nimport { db } from \"./config/firebase\";\r\n\r\nexport default class Recipe extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      heart: false,\r\n    };\r\n    this.onHeartClick = this.onHeartClick.bind(this);\r\n  }\r\n\r\n  onHeartClick() {\r\n    console.log(this.props.user);\r\n    db.collection(this.props.user.uid)\r\n      .add({\r\n        title: this.props.title,\r\n        image: this.props.image,\r\n        calories: this.props.calories,\r\n        servings: this.props.servings,\r\n        ingredients: this.props.ingredients,\r\n        dietLabels: this.props.dietLabels,\r\n        healthLabels: this.props.healthLabels,\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  checkIfInDb() {\r\n    this.setState({\r\n      heart: this.props.firestoreRecipeData.some(\r\n        (recipe) => recipe.title === this.props.title\r\n      ),\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkIfInDb();\r\n    console.log(this.state.heart);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={styles.recipeCardContainer}\r\n        onClick={() => this.props.handleRecipeClick(true, this.props)}\r\n      >\r\n        <p className={styles.recipeTitle}>{this.props.title}</p>\r\n        <img\r\n          src={this.props.image}\r\n          className={styles.roundImage}\r\n          alt=\"Recipe\"\r\n        />\r\n        <div className={styles.info}>\r\n          {this.props.dietLabels.map((label) => (\r\n            <p key={label}>{label}</p>\r\n          ))}\r\n          {this.props.healthLabels.map((label) => (\r\n            <p key={label}>{label}</p>\r\n          ))}\r\n        </div>\r\n        {this.props.showFavButton && (\r\n          <div className={styles.favButtonContainer}>\r\n            {this.state.heart ? (\r\n              <img src={filledHeart} />\r\n            ) : (\r\n              <img src={heart} onClick={this.onHeartClick} />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\recipePopup.js",[],"C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\error.js",[],"C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\account.js",["49","50","51"],"import React, { Component } from 'react';\r\nimport styles from '../css/mystyles.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { auth } from './config/firebase.js';\r\nimport Login from './login';\r\nimport SignUp from './signup';\r\nimport account from '../image/account.png';\r\nimport heart from '../image/heart.png';\r\n\r\nexport default class Account extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            showForm: false,\r\n            formType: \"login\",\r\n            showError: false,\r\n            errorMessage: \"\",\r\n            height: null\r\n        }\r\n        this.handleAccountClick = this.handleAccountClick.bind(this);\r\n        this.handleLoginSubmit = this.handleLoginSubmit.bind(this);\r\n        this.handleSignupSubmit = this.handleSignupSubmit.bind(this);\r\n        this.handleCreateClick = this.handleCreateClick.bind(this);\r\n        this.handleCancelClick = this.handleCancelClick.bind(this);\r\n        this.calculateHeight = this.calculateHeight.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        auth.onAuthStateChanged((user) => {\r\n            this.setState({\r\n                user: user\r\n            });\r\n            this.props.getUser(user);\r\n        });\r\n    }\r\n\r\n    handleAccountClick() {\r\n        this.setState({\r\n            showForm: !this.state.showForm,\r\n            showError: false,\r\n        });\r\n    }\r\n\r\n    handleCreateClick() {\r\n        this.setState({\r\n            showLogin: false,\r\n            formType: \"signup\",\r\n            showError: false\r\n        });\r\n    }\r\n\r\n    handleCancelClick() {\r\n        this.setState({\r\n            showLogin: true,\r\n            formType: \"login\",\r\n            showError: false\r\n        });\r\n    }\r\n\r\n    handleLoginSubmit(e, account) {\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(account.email, account.password)\r\n            .then(() => {\r\n                this.setState({\r\n                    showError: false\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                this.setState({\r\n                    showError: true,\r\n                    errorMessage: \"Wrong username or password\"\r\n                });\r\n            });\r\n    }\r\n\r\n    handleSignupSubmit(e, account) {\r\n        e.preventDefault();\r\n        if (account.password === account.confirmPassword) {\r\n            auth.createUserWithEmailAndPassword(account.email, account.password)\r\n                .then()\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    if(err.code === \"auth/email-already-in-use\"){\r\n                        this.setState({\r\n                            showError: true,\r\n                            errorMessage: \"Email already in used\"\r\n                        });\r\n                    }\r\n\r\n                    if(err.code === \"auth/weak-password\"){\r\n                        this.setState({\r\n                            showError: true,\r\n                            errorMessage: \"Password too short\"\r\n                        });\r\n                    }\r\n                });\r\n        } else {\r\n            this.setState({\r\n                showError: true,\r\n                errorMessage: \"Passwords must match\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleLogoutClick() {\r\n        auth.signOut().catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    calculateHeight(element) {\r\n        this.setState({\r\n            height: element.offsetHeight\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.user) {\r\n            return (\r\n                <div className={styles.accountContainer}>\r\n                    <img src={heart} className={styles.likeButton} />\r\n                    <button onClick={this.handleLogoutClick} className={styles.logoutButton}>Logout</button>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className={styles.accountContainer}>\r\n                    <img className={styles.accountButton} src={account} onClick={this.handleAccountClick} />\r\n                    <CSSTransition\r\n                        in={this.state.showForm}\r\n                        timeout={500}\r\n                        unmountOnExit\r\n                        classNames={{\r\n                            enter: styles.formContainerEnter,\r\n                            enterActive: styles.formContainerEnterActive,\r\n                            enterDone: styles.formContainerEnterDone,\r\n                            exit: styles.formContainerExit,\r\n                            exitActive: styles.formContainerExitActive,\r\n                            exitDone: styles.formContainerExitDone\r\n                        }}\r\n                    >\r\n                        <div className={styles.formContainer} style={{ height: this.state.height }}>\r\n                            <CSSTransition\r\n                                in={this.state.formType === \"login\"}\r\n                                timeout={500}\r\n                                unmountOnExit\r\n                                onEnter={this.calculateHeight}\r\n                                classNames={{\r\n                                    enter: styles.loginEnter,\r\n                                    enterActive: styles.loginEnterActive,\r\n                                    enterDone: styles.loginEnterDone,\r\n                                    exit: styles.loginExit,\r\n                                    exitActive: styles.loginExitActive,\r\n                                    exitDone: styles.loginExitDone\r\n                                }}\r\n                            >\r\n                                <Login\r\n                                    handleCreateClick={this.handleCreateClick}\r\n                                    handleLoginSubmit={this.handleLoginSubmit}\r\n                                    showError={this.state.showError}\r\n                                    errorMessage={this.state.errorMessage}\r\n                                />\r\n                            </CSSTransition>\r\n                            <CSSTransition\r\n                                in={this.state.formType === \"signup\"}\r\n                                timeout={500}\r\n                                unmountOnExit\r\n                                onEnter={this.calculateHeight}\r\n                                classNames={{\r\n                                    enter: styles.signupEnter,\r\n                                    enterActive: styles.signupEnterActive,\r\n                                    enterDone: styles.signupEnterDone,\r\n                                    exit: styles.signupExit,\r\n                                    exitActive: styles.signupExitActive,\r\n                                    exitDone: styles.signupExitDone\r\n                                }}\r\n                            >\r\n                                <SignUp\r\n                                    handleCancelClick={this.handleCancelClick}\r\n                                    handleSignupSubmit={this.handleSignupSubmit}\r\n                                    showError={this.state.showError}\r\n                                    errorMessage={this.state.errorMessage}\r\n                                />\r\n                            </CSSTransition>\r\n                        </div>\r\n                    </CSSTransition>\r\n                    {this.state.showError &&\r\n                        <div className={styles.formError}>\r\n                            <p>{this.state.errorMessage}</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\config\\firebase.js",[],"C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\signup.js",[],"C:\\Users\\Carthur\\Desktop\\Tonight-Recipe\\tonight-recipe\\src\\components\\login.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":67,"column":15,"nodeType":"58","endLine":67,"endColumn":40},{"ruleId":"56","severity":1,"message":"57","line":69,"column":15,"nodeType":"58","endLine":69,"endColumn":62},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"57","line":123,"column":21,"nodeType":"58","endLine":123,"endColumn":70},{"ruleId":"56","severity":1,"message":"57","line":130,"column":21,"nodeType":"58","endLine":130,"endColumn":109},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]